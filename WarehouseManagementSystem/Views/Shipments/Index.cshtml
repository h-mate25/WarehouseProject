@{
    ViewData["Title"] = "Shipments Management";
    ViewData["Breadcrumb"] = "Home / Shipments";
}

<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <div class="bg-white p-6 rounded shadow-sm">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-gray-500">Active Shipments</p>
                <h3 class="text-2xl font-bold mt-2" id="activeShipments">0</h3>
            </div>
            <div class="w-12 h-12 bg-blue-50 rounded-full flex items-center justify-center">
                <i class="ri-truck-line text-blue-500"></i>
            </div>
        </div>
        <div class="mt-4 text-sm text-blue-500">
            <span id="highPriorityCount">0 high priority</span>
        </div>
    </div>
    <div class="bg-white p-6 rounded shadow-sm">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-gray-500">Pending Inbound</p>
                <h3 class="text-2xl font-bold mt-2" id="pendingInbound">0</h3>
            </div>
            <div class="w-12 h-12 bg-green-50 rounded-full flex items-center justify-center">
                <i class="ri-arrow-down-line text-green-500"></i>
            </div>
        </div>
        <div class="mt-4 text-sm text-green-500">
            <span id="arrivingToday">0 arriving today</span>
        </div>
    </div>
    <div class="bg-white p-6 rounded shadow-sm">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-gray-500">Pending Outbound</p>
                <h3 class="text-2xl font-bold mt-2" id="pendingOutbound">0</h3>
            </div>
            <div class="w-12 h-12 bg-orange-50 rounded-full flex items-center justify-center">
                <i class="ri-arrow-up-line text-orange-500"></i>
            </div>
        </div>
        <div class="mt-4 text-sm text-orange-500">
            <span id="departingToday">0 departing today</span>
        </div>
    </div>
    <div class="bg-white p-6 rounded shadow-sm">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-gray-500">Completed Today</p>
                <h3 class="text-2xl font-bold mt-2" id="completedToday">0</h3>
            </div>
            <div class="w-12 h-12 bg-purple-50 rounded-full flex items-center justify-center">
                <i class="ri-check-line text-purple-500"></i>
            </div>
        </div>
        <div class="mt-4 text-sm text-purple-500">
            <span>On track</span>
        </div>
    </div>
</div>

<div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
    <div class="lg:col-span-2 bg-white rounded shadow-sm">
        <div class="p-6 border-b flex justify-between items-center">
            <h3 class="text-lg font-bold">Shipment List</h3>
            <div class="flex gap-2">
                <input type="text" id="shipmentSearch" placeholder="Search shipments..." class="px-4 py-2 border rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-primary">
                <select id="typeFilter" class="px-4 py-2 border rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-primary">
                    <option value="">All Types</option>
                    <option value="Inbound">Inbound</option>
                    <option value="Outbound">Outbound</option>
                </select>
                <select id="statusFilter" class="px-4 py-2 border rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-primary">
                    <option value="">All Statuses</option>
                    <option value="Pending">Pending</option>
                    <option value="Processing">Processing</option>
                    <option value="In Transit">In Transit</option>
                    <option value="Completed">Completed</option>
                    <option value="Delayed">Delayed</option>
                </select>
                <a href="@Url.Action("Create", "Shipments")" class="px-4 py-2 bg-primary text-white rounded-full text-sm font-medium">New Shipment</a>
            </div>
        </div>
        <div class="overflow-x-auto">
            <table class="w-full">
                <thead>
                    <tr class="bg-gray-50">
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Partner</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Items</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ETA</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Priority</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody id="shipmentTableBody" class="bg-white divide-y divide-gray-200">
                    <!-- Shipments will be loaded dynamically -->
                    <tr class="animate-pulse">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-16"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-16"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-24"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-20"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-16"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-12"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-12"></div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="h-4 bg-gray-200 rounded w-24"></div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="bg-white rounded shadow-sm">
        <div class="p-6 border-b">
            <h3 class="text-lg font-bold">Quick Actions</h3>
        </div>
        <div class="p-6 space-y-4">
            <a href="@Url.Action("Create", "Shipments")" class="w-full flex items-center justify-between p-4 bg-blue-50 text-blue-600 rounded-button hover:bg-blue-100">
                <span>New Shipment</span>
                <i class="ri-add-line"></i>
            </a>
            <a href="@Url.Action("Create", "Shipments", new { type = "Inbound" })" class="w-full flex items-center justify-between p-4 bg-green-50 text-green-600 rounded-button hover:bg-green-100">
                <span>New Inbound</span>
                <i class="ri-arrow-down-line"></i>
            </a>
            <a href="@Url.Action("Create", "Shipments", new { type = "Outbound" })" class="w-full flex items-center justify-between p-4 bg-orange-50 text-orange-600 rounded-button hover:bg-orange-100">
                <span>New Outbound</span>
                <i class="ri-arrow-up-line"></i>
            </a>
            <a href="@Url.Action("Index", "Shipments", new { status = "Delayed" })" class="w-full flex items-center justify-between p-4 bg-red-50 text-red-600 rounded-button hover:bg-red-100">
                <span>View Delayed</span>
                <i class="ri-timer-line"></i>
            </a>
        </div>
    </div>
</div>

<div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
    <div class="bg-white rounded shadow-sm">
        <div class="p-6 border-b">
            <h3 class="text-lg font-bold">Shipment Status</h3>
        </div>
        <div id="shipmentStatusChart" class="chart-container"></div>
    </div>
    <div class="bg-white rounded shadow-sm">
        <div class="p-6 border-b flex justify-between items-center">
            <h3 class="text-lg font-bold">Recent Activity</h3>
            <button id="viewAllShipmentActivity" class="text-primary text-sm">View All</button>
        </div>
        <div id="recentShipmentActivity" class="p-6 space-y-6">
            <!-- Activity will be loaded dynamically -->
            <div class="animate-pulse">
                <div class="flex items-start gap-4">
                    <div class="w-8 h-8 bg-gray-200 rounded-full"></div>
                    <div class="flex-1">
                        <div class="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
                        <div class="h-3 bg-gray-200 rounded w-1/2"></div>
                    </div>
                </div>
            </div>
            <div class="animate-pulse">
                <div class="flex items-start gap-4">
                    <div class="w-8 h-8 bg-gray-200 rounded-full"></div>
                    <div class="flex-1">
                        <div class="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
                        <div class="h-3 bg-gray-200 rounded w-1/2"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/shipments.js"></script>
    <script>
        // Initialize the shipments manager after the page is loaded
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Shipments page DOM content loaded');
            
            if (typeof shipmentsManager !== 'undefined' && 
                typeof shipmentsManager.init === 'function' && 
                !shipmentsManager.isInitialized()) {
                console.log('Initializing shipments manager');
                shipmentsManager.init();
            } else {
                console.log('Shipments manager already initialized or not available');
            }
        });
    </script>
} 
@model WarehouseManagementSystem.Models.Shipment

@{
    ViewData["Title"] = "Shipment Details";
    ViewData["Breadcrumb"] = "Home / Shipments / Details";
}

<div class="bg-white rounded shadow-sm p-6 mb-6">
    <div class="flex justify-between items-center mb-6">
        <h2 class="text-2xl font-bold">Shipment Details: @Model.Id</h2>
        <div class="flex space-x-2">
            <a href="@Url.Action("Edit", "Shipments", new { id = Model.Id })" class="px-4 py-2 bg-primary text-white rounded">
                Edit
            </a>
            <a href="@Url.Action("Index", "Shipments")" class="px-4 py-2 bg-gray-100 text-gray-700 rounded">
                Back to List
            </a>
        </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
        <div>
            <h3 class="text-lg font-bold mb-4">Shipment Information</h3>
            <div class="space-y-4">
                <div>
                    <p class="text-gray-500 text-sm">ID</p>
                    <p class="font-medium">@Model.Id</p>
                </div>
                <div>
                    <p class="text-gray-500 text-sm">Type</p>
                    <p class="font-medium">@Model.Type</p>
                </div>
                <div>
                    <p class="text-gray-500 text-sm">Partner</p>
                    <p class="font-medium">@Model.PartnerName</p>
                </div>
                <div>
                    <p class="text-gray-500 text-sm">Status</p>
                    <p class="font-medium">
                        @{
                            var statusClass = Model.Status switch
                            {
                                "Pending" => "bg-yellow-100 text-yellow-800",
                                "Processing" => "bg-blue-100 text-blue-800",
                                "In Transit" => "bg-purple-100 text-purple-800",
                                "Completed" => "bg-green-100 text-green-800",
                                "Delayed" => "bg-red-100 text-red-800",
                                _ => "bg-gray-100 text-gray-800"
                            };
                        }
                        <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full @statusClass">
                            @Model.Status
                        </span>
                    </p>
                </div>
            </div>
        </div>
        <div>
            <h3 class="text-lg font-bold mb-4">Additional Details</h3>
            <div class="space-y-4">
                <div>
                    <p class="text-gray-500 text-sm">Priority</p>
                    <p class="font-medium">
                        @{
                            var priorityClass = Model.Priority switch
                            {
                                "Low" => "bg-green-100 text-green-800",
                                "Medium" => "bg-blue-100 text-blue-800",
                                "High" => "bg-orange-100 text-orange-800",
                                "Urgent" => "bg-red-100 text-red-800",
                                _ => "bg-gray-100 text-gray-800"
                            };
                        }
                        <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full @priorityClass">
                            @Model.Priority
                        </span>
                    </p>
                </div>
                <div>
                    <p class="text-gray-500 text-sm">Estimated Arrival Date</p>
                    <p class="font-medium">@Model.ETA.ToString("MMMM dd, yyyy h:mm tt")</p>
                </div>
                <div>
                    <p class="text-gray-500 text-sm">Created At</p>
                    <p class="font-medium">@Model.CreatedAt.ToString("MMMM dd, yyyy h:mm tt")</p>
                </div>
                <div>
                    <p class="text-gray-500 text-sm">Created By</p>
                    <p class="font-medium">@Model.CreatedBy</p>
                </div>
                @if (Model.CompletedAt.HasValue)
                {
                    <div>
                        <p class="text-gray-500 text-sm">Completed At</p>
                        <p class="font-medium">@Model.CompletedAt.Value.ToString("MMMM dd, yyyy h:mm tt")</p>
                    </div>
                    <div>
                        <p class="text-gray-500 text-sm">Completed By</p>
                        <p class="font-medium">@Model.CompletedBy</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="mb-8">
        <h3 class="text-lg font-bold mb-4">Notes</h3>
        <div class="bg-gray-50 p-4 rounded">
            <p>@(string.IsNullOrEmpty(Model.Notes) ? "No notes available." : Model.Notes)</p>
        </div>
    </div>

    <div>
        <h3 class="text-lg font-bold mb-4">Shipment Items</h3>
        <div class="overflow-x-auto">
            <table class="w-full">
                <thead>
                    <tr class="bg-gray-50">
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">SKU</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Quantity</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Notes</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @if (Model.Items != null && Model.Items.Any())
                    {
                        foreach (var item in Model.Items)
                        {
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@item.SKU</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 item-name" data-sku="@item.SKU">Loading...</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.Quantity</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@(string.IsNullOrEmpty(item.Notes) ? "-" : item.Notes)</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">No items in this shipment.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/shipments.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Shipment Details page loaded');
            
            // Load item details
            if (typeof shipmentsManager !== 'undefined' && 
                typeof shipmentsManager.loadItemDetails === 'function') {
                shipmentsManager.loadItemDetails();
            }
        });
    </script>
} 